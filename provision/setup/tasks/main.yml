- name: update apt
  become: yes
  apt: update_cache=yes

- name: Install system packages
  vars:
    system_packages:
      - acl # fix privilege issue: https://stackoverflow.com/questions/36646880/ansible-2-1-0-using-become-become-user-fails-to-set-permissions-on-temp-file
      - postgresql
      - libpq-dev # Required for Ansible to interact with postgres
      - python-psycopg2 # Required for Ansible to interact with postgres
      - build-essential
      - git
      - python3-dev
      - python-setuptools
      - python3-pip
      - python3-virtualenv
      - make
      - build-essential
      - libssl-dev
      - zlib1g-dev
      - libbz2-dev
      - libreadline-dev
      - libsqlite3-dev
      - wget
      - curl
      - llvm
      - libncurses5-dev
      - xz-utils
      - tk-dev
    
  become: yes
  apt: name={{ item }} state=present
  with_items: "{{ system_packages }}"

- name: Create a python build directories
  become: yes
  file:
    group: vagrant
    owner: vagrant
    state: directory
    path: /vagrant/.python3.6.4

- name: Create a Download directory
  become: yes
  file:
    group: vagrant
    owner: vagrant
    state: directory
    path: /vagrant/Downloads


    #- name: Install python 
    #  become: yes
    #  become_user: vagrant
    #  script: /home/lemon/scripts/compile_python_debian_no_apt_update.sh 3.6.5

- name: Install Python packages
  vars:
    python_packages:
      - pip
      - virtualenv
  become: yes
  easy_install: name={{ item }}
  with_items: "{{ python_packages }}"

- name: Create virtualenv directory
  become: yes
  file:
      group: vagrant
      owner: vagrant
      mode: 0755
      state: directory
      path: /vagrant/virtualenvs

- name: Set up dbasik virtualenv
  vars:
    project_path: /vagrant/code/dbasik_dftgovernance
    project_name: dbasik
    virtualenv_root: /vagrant/virtualenvs
    requirements_files:
      - "{{ project_path }}/requirements.txt"
      - "{{ project_path }}/requirements_dev.txt"
  pip:
      requirements: "{{ item }}"
      virtualenv: /vagrant/virtualenvs/dbasik
      virtualenv_python: python3
  loop: "{{ requirements_files }}"

- name: ensure database user is created
  become: yes
  become_user: postgres
  postgresql_user:
    name: vagrant
    password: vagrant
    role_attr_flags: CREATEDB,SUPERUSER

- name: create database
  become: yes
  become_user: postgres
  postgresql_db:
    name: dbasik_dftgovernance

- name: migrate database
  django_manage:
    command: migrate
    app_path: /vagrant/code/dbasik_dftgovernance
    settings: 'config.settings.local'
    virtualenv: /vagrant/virtualenvs/dbasik
