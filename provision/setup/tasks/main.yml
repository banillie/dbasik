- name: update apt
  become: yes
  apt: update_cache=yes

- name: Install system packages
  become: yes
  apt: name={{ item }} state=present
  with_items: "{{ system_packages }}"

- name: Create python build directories
  become: yes
  file:
    group: vagrant
    owner: vagrant
    state: directory
    path: /vagrant/.python3.6.4

- name: Create a Download directory
  become: yes
  file:
    group: vagrant
    owner: vagrant
    state: directory
    path: /home/vagrant/Downloads

- name: Test for downloaded Python tarball
  stat:
#   path: /home/vagrant/.Python3.6.5/bin/python3.6
    path: /home/vagrant/Downloads/Python-3.6.5.tar.xz
  register: py

- name: Debug!
  debug:
    msg: "Python binary exists"
  when: py.stat.exists

- name: Download Python installation files
  get_url:
    url: https://www.python.org/ftp/python/{{ required_python_version }}/Python-{{ required_python_version }}.tar.xz
    dest: /home/vagrant/Downloads
  when: not py.stat.exists


    #- name: Install python 
    #  become: yes
    #  become_user: vagrant
    #  script: /home/lemon/scripts/compile_python_debian_no_apt_update.sh 3.6.5

- name: Install Python packages
  become: yes
  easy_install: name={{ item }}
  with_items: "{{ python_packages }}"

- name: Create virtualenv directory
  become: yes
  file:
      group: vagrant
      owner: vagrant
      mode: 0755
      state: directory
      path: "{{ virtualenv_root }}"

- name: Set up dbasik virtualenv
  pip:
      requirements: "{{ item }}"
      virtualenv: "{{ virtualenv_root }}/{{ project_name }}"
      virtualenv_python: python3
  loop: "{{ requirements_files }}"

- name: ensure database user is created
  become: yes
  become_user: postgres
  postgresql_user:
    name: vagrant
    password: vagrant
    role_attr_flags: CREATEDB,SUPERUSER

- name: create database
  become: yes
  become_user: postgres
  postgresql_db:
    name: dbasik_dftgovernance

- name: migrate database
  django_manage:
    command: migrate
    app_path: "{{ project_path }}"
    settings: 'config.settings.local'
    virtualenv: "{{ virtualenv_root }}/{{ project_name }}"
